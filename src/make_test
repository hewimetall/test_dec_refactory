GCC = gcc
CFLAGS = -I. 
LDFLAGS = -c

binary_t := $(shell find ./tests/tests_binary -iname "*.c" )
comparison_t := $(shell find ./tests/test_comparison -iname "*.c" )
conversion_t := $(shell find ./tests/test_convers -iname "*.c" )
helpers_t := $(shell find ./tests/test_helpers -iname "*.c" )
math_ops_t := $(shell find ./tests/test_math -iname "*.c" )


ifeq ($(shell uname -s),Darwin)
	TEST_FLAGS  = -fprofile-arcs -ftest-coverage --coverage $^ -o $@ -lcheck -lpthread -lm
else
	TEST_FLAGS  = -fprofile-arcs -ftest-coverage --coverage $^ -o $@ -lcheck -lgcov -lpthread -lm 
endif

.PHONY: test_* main clean

test_comparison: ${comparison_t} libbinary libcomp
	make clean
	$(GCC) $(CFLAGS) $(TEST_FLAGS)  -DTESTS_COMP
	./$@

test_convers: ${conversion_t} libbinary
	make clean
	$(GCC) $(CFLAGS) $(TEST_FLAGS)  -DTESTS_CONV
	./$@

test_binary: ${binary_t} libbinary
	make clean
	$(GCC) $(CFLAGS) $(TEST_FLAGS)  -DTESTS_CORE
	./$@

test_helpers: ${helpers_t} libbinary
	make clean
	$(GCC) $(CFLAGS) $(TEST_FLAGS)  -DTESTS_CORE
	./$@

test_math: ${helpers_t} libbinary
	make clean
	$(GCC) $(CFLAGS) $(TEST_FLAGS)  -DTESTS_MATH
	./$@

main: ${LIB_INC}
	gcc  -g main.c ${LIB_INC} -o $@
	./main || true
